apiVersion: apps/v1
kind: {{ if eq .Values.servicename "rng" }} DaemonSet {{else}} Deployment {{end}}
metadata:
  name: {{ include "dockercoins-single-service.fullname" . }}
  labels:
{{ include "dockercoins-single-service.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{ include "dockercoins-single-service.labels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "dockercoins-single-service.labels" . | indent 8 }}
    spec:
      containers:
        - name: {{ .Values.servicename }}
          image: {{ if eq .Values.servicename "redis" }} "redis:{{ .Values.image.tag }}" {{ else }} "{{ .Values.image.registry }}/{{.Values.servicename}}:{{ .Values.image.tag }}" {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PROJECT_NAME
            value: "dockercoins"
          - name: ENVIRONMENT
            value: {{ .Release.Namespace }}
          - name: SERVICE_NAME
            value: {{.Values.servicename }}
          {{- if .Values.healthcheck.enabled -}}
          {{ if eq .Values.servicename "worker" }}
          livenessProbe:
            exec:
              command:
              - ps
              - aux | grep python | grep -v grep
          readinessProbe:
            exec:
              command:
              - ps
              - aux | grep python | grep -v grep
          {{ else if eq .Values.servicename "redis" }}
          livenessProbe:
            exec:
              command:
              - redis-cli
              - ping
            initialDelaySeconds: 5
          readinessProbe:
            exec:
              command:
              - redis-cli
              - ping
            initialDelaySeconds: 5
          {{ else }}
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
          {{- end }}
          {{- end }}
